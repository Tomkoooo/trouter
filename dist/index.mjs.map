{"version":3,"sources":["../src/router/dynamicRouter.tsx","../src/components/NotFound.tsx","../src/components/Link.tsx","../src/middlewere/RouteWithMiddlewere.tsx"],"sourcesContent":["/// <reference types=\"vite/client\" />\n\nimport React, { lazy, Suspense, ReactNode } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport NotFound from '../components/NotFound'; // 404-es oldal importálása\nimport RouteWithMiddleware from '../middlewere/RouteWithMiddlewere';  // Middleware importálása\n\n// Típusdefiníciók\ntype PageModule = { default: React.ComponentType<any> };\n\n// A helyes típusok importálása\ntype RouteConfig = {\n  path: string;\n  component: React.ComponentType<any>;\n};\n\ninterface Pages {\n  [key: string]: {\n    type: string;\n    credentials?: string;\n    redirectTo?: string;\n  };\n}\n\ninterface DynamicRouterProps {\n  loadingFallback?: ReactNode;\n  pagesConfig: Pages;\n  pagePath?: string;\n  user?: Object | null;\n  middlewere?: React.ComponentType<any>; // Optional custom middleware component\n}\n\nconst DynamicRouter: React.FC<DynamicRouterProps> = ({\n  loadingFallback = <div>Loading...</div>,\n  user,\n  pagesConfig,\n  middlewere, // Custom middleware passed as prop\n}) => {\n  // A fájlok dinamikus importálása globálisan, most már mind a .tsx, mind a .jsx fájlokat figyelembe vesszük\n  const pages = import.meta.glob('../pages/**/*.{js,jsx,ts,tsx}');\n\n  // Az útvonalak létrehozása a fájlokból\n  const pathFromFile = (filePath: string): string => {\n    const cleanedPath = filePath\n      .replace('./pages', '') // A 'pages' mappa eltávolítása\n      .replace(/\\/page\\.(js|jsx|ts|tsx)$/, '')  // Csak `page` fájlokat kezelünk\n      .replace(/\\[([^\\]]+)\\]/g, ':$1');         // Dinamikus útvonalak kezeléséhez\n\n    return cleanedPath === '' ? '/' : cleanedPath;  // Ha üres, akkor a főoldal\n  };\n\n  // Dinamikus route objektumok létrehozása\n  const routes: RouteConfig[] = Object.keys(pages).map((filePath) => {\n    const Component = lazy(() => {\n      return pages[filePath]().then((module: unknown) => {\n        const mod = module as PageModule;\n        return { default: mod.default };\n      });\n    });\n\n    return {\n      path: pathFromFile(filePath),\n      component: Component,\n    };\n  });\n\n  return (\n    <Router>\n      <Suspense fallback={loadingFallback}>\n        <Routes>\n          {routes.map(({ path, component: Component }) => {\n            // If a custom middleware is passed, use it; otherwise, use the default RouteWithMiddleware\n            const MiddlewareComponent = middlewere || RouteWithMiddleware;\n\n            return (\n              <Route\n                key={path}\n                path={path}\n                element={\n                  <MiddlewareComponent\n                    path={path}\n                    component={Component}\n                    user={user}\n                    routes={pagesConfig}\n                  />\n                }\n              />\n            );\n          })}\n          <Route path=\"*\" element={<NotFound />} />\n        </Routes>\n      </Suspense>\n    </Router>\n  );\n};\n\nexport default DynamicRouter;\n","import React from 'react';\nimport './NotFound.css';  // We'll add some custom CSS for styling\nimport Link from './Link';  // We'll use our custom Link component\n\nconst NotFound: React.FC = () => {\n  return (\n    <div className=\"not-found-container\">\n      <div className=\"not-found-content\">\n        <h1 className=\"not-found-title\">404</h1>\n        <p className=\"not-found-message\">Oops! The page you're looking for doesn't exist.</p>\n        <p className=\"not-found-submessage\">But don't worry, you can always go back to the homepage.</p>\n        <Link to=\"/\" className=\"back-home-button\">Go to Homepage</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\ninterface LinkProps {\n  to: string;\n  children: React.ReactNode;\n  className?: string;  // The optional className prop\n  target?: string; // Optional target for the link (e.g. _blank for opening in a new tab)\n}\n\nconst Link: React.FC<LinkProps> = ({ to, children, className, target }) => {\n  const navigate = useNavigate();\n\n  const handleClick = (e: React.MouseEvent) => {\n    e.preventDefault();  // Prevent the default anchor tag behavior\n\n    // Use navigate to change the route programmatically\n    navigate(to);\n  };\n\n  return (\n    // Use a button or div for navigation, styled as a link if needed\n    <button\n      onClick={handleClick}\n      className={className}\n      style={{ all: 'unset', cursor: 'pointer' }} // Remove default button styles, make it look like a link\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default Link;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\ninterface RouteWithMiddlewareProps {\n  path: string;\n  component: React.ComponentType<any>;\n  user?: Object | null;\n  routes: routes;\n}\n\ninterface routes {\n    [key: string]: {\n        type: string;\n        credentials?: string;\n        redirectTo?: string;\n    };\n}\n\n\n// Middleware logika\nconst RouteWithMiddleware: React.FC<RouteWithMiddlewareProps> = ({\n  path,\n  component: Component,\n  user,\n  routes: routeConfig\n}) => {\n  const navigate = useNavigate();\n\nconst routeConfigForPath = routeConfig[path] as { type: string; credentials: string; redirectTo: string } | undefined;\n  if (routeConfigForPath) {\n    if (routeConfigForPath.type === 'public') {\n      return <Component />;\n    }\n\n    // Privát route esetén ellenőrizzük a felhasználót\n    if (routeConfigForPath.type === 'private') {\n      if (user) {\n        const condition = new Function('user', `return ${routeConfigForPath.credentials}`);\n        if (condition(user)) {\n          return <Component />;\n        } else {\n          navigate(routeConfigForPath.redirectTo);\n          return null;\n        }\n      } else {\n        navigate(routeConfigForPath.redirectTo);\n        return null;\n      }\n    }\n  }\n\n  return <Component />;\n};\n\nexport default RouteWithMiddleware;\n"],"mappings":"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","names":["React","React","React","React","useNavigate","React"]}